# Starter pipeline

trigger:
- master

pr: none

variables:
  solutionPath: TheHub 

jobs:
- job: build_linux
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'sonarcloud nf-lg-kp-ms'
      organization: '2006-jun15-net'
      scannerMode: 'MSBuild'
      projectKey: '2006-jun15-net_nf-lg-kp-ms-Project2'
      projectName: 'nf-lg-kp-ms-Project2'
      extraProperties: sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml

  - script: dotnet build -c Release
    displayName: dotnet build
    workingDirectory: $(solutionPath)

  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: 'test'
      projects: '$(solutionPath)'
      arguments: '-c Release --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'
      testRunTitle: 'ubuntu'
 
  - task: PublishCodeCoverageResults@1
    displayName: 'publish code coverage'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
      failIfCoverageEmpty: true

  - task: SonarCloudAnalyze@1
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
      
  - script: dotnet publish -c Release -o ../publish
    displayName: dotnet publish
    workingDirectory: $(solutionPath)


  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Azure subscription 1(a8f0024b-b40d-44a8-8a01-2d63b02fb4c7)'
      appType: 'webApp'
      WebAppName: 'Project2-TheHub'
      packageForLinux: '$(System.DefaultWorkingDirectory)/publish'